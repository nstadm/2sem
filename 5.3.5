#include <iostream>
#include <string>
#include <cmath>

using namespace std;

class Fraction{
public:
    Fraction(int numerator, int denominator);
    string toString();
    double toDouble();
private:
    int numerator;
    int denominator;
    int gcd(int a, int b);
};

Fraction::Fraction(int numerator, int denominator) {
    int divisor = gcd(abs(numerator), abs(denominator));
    this->numerator = numerator / divisor;
    this->denominator = denominator / divisor;
   
    if (this->denominator < 0) {
        this->numerator = -this->numerator;
        this->denominator = -this->denominator;
    }
}

string Fraction::toString() {
    int whole = this->numerator / this->denominator;
    int remainder = abs(this->numerator) % abs(this->denominator);
    string sign = (this->numerator < 0) ? "-" : "";
    string result = "";
    
    if (whole != 0) {
        result += sign + to_string(whole);
    }
    
    if (whole != 0 && remainder != 0) {
        result += " ";
    }
    
    if (remainder != 0) {
        result += sign + to_string(remainder) + "/" + to_string(this->denominator);
    }
    
    if (result == "") {
        result = "0";
    }
    
    return result;
}

double Fraction::toDouble() {
    return (double)this->numerator / this->denominator;
}

int Fraction::gcd(int a, int b) {
    if (b == 0) {
        return a;
    }
    return gcd(b, a % b);
}

int main(void) {
    int num, den;
    char slash;
    std::string input = "";
    std::getline(std::cin, input);
    
    
    if (sscanf(input.c_str(), "%d %c %d", &num, &slash, &den) != 3 || slash != '/') {
        std::cout << "Invalid input" << std::endl;
        return 1;
    }
    
    Fraction fraction(num, den);
    cout << fraction.toString() << " is " << fraction.toDouble() << " in decimal" << endl;
    return 0;
}
