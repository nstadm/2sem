#include <iostream>
#include <string>

class FlightBooking {
public:
    FlightBooking(int id, int capacity, int reserved);
    void printStatus();
    bool reserveSeats(int number_ob_seats);
    bool cancelReservations(int number_ob_seats);
private:
    int id;
    int capacity;
    int reserved;
};

FlightBooking::FlightBooking(int id, int capacity, int reserved)
{
    if (capacity < 0 || reserved < 0 || reserved > capacity * 1.05) {
        this->capacity = 0;
        this->reserved = 0;
    } else {
        this->id = id;
        this->capacity = capacity;
        this->reserved = reserved;
    }
}

void FlightBooking::printStatus()
{
    std::cout << "Flight " << this->id << " : " << this->reserved << "/" << this->capacity << " ("
              << (int)(((float)this->reserved / this->capacity) * 100) << "%) seats taken" << std::endl;
}

bool FlightBooking::reserveSeats(int number_ob_seats)
{
    int newReserved = this->reserved + number_ob_seats;
    if (newReserved <= this->capacity * 1.05) {
        this->reserved = newReserved;
        return true;
    } else {
        return false;
    }
}

bool FlightBooking::cancelReservations(int number_ob_seats)
{
    int newReserved = this->reserved - number_ob_seats;
    if (newReserved >= 0) {
        this->reserved = newReserved;
        return true;
    } else {
        return false;
    }
}

int main() {
    int reserved = 0, capacity = 0;
    std::cout << "Provide flight capacity: ";
    std::cin >> capacity;
    std::cout << "Provide number of reserved seats: ";
    std::cin >> reserved;
    FlightBooking booking(1, capacity, reserved);

    std::string command = "";
    while (command != "quit") {
        booking.printStatus();
        std::cout << "What would you like to do?: ";
        std::getline(std::cin, command);

        if (command.substr(0, 3) == "add") {
            int numSeats = std::stoi(command.substr(4));
            if (!booking.reserveSeats(numSeats)) {
                std::cout << "Cannot perform this operation" << std::endl;
            }
        } else if (command.substr(0, 6) == "cancel") {
            int numSeats = std::stoi(command.substr(7));
            if (!booking.cancelReservations(numSeats)) {
                std::cout << "Cannot perform this operation" << std::endl;
            }
        }
    }

    return 0;
}
